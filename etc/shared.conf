# a line starting with a '#' is a comment
# The server instance name
# add this entry to your file (the one in your home)
# server                                    = test.server.org

# your username
# add this entry to your file (the one in your home)
# username                                  = username

# theme

use "default-theme.conf"

# maximum number of attachments allowed for a single toot
# default is 4
#max-numbers-allowed-attachments            = 4

# maximum number of characters allowed for a single toot
# default is 500
#max-message-length                         = 500

# maximum  number  of characters  allowed  for  reporting an  user  to
# instance's admin
#default is 100
#max-report-comment-length                  = 100

# Character to use when replying to a message
reply-quoted-character                      = "> "

# delete the command  history entries that are older  than this number
# of days
purge-history-days-offset                   = -30

# delete the cache entries that are older than this number of days
purge-cache-days-offset                     = -7

# chosen editor (as shell command line) for compose a message
editor                                      = "nano --locking"

# update gemlog subscriptions when program starts
# (default 'no', change to 'yes' if desired)
start.update.gemlog                         = yes

# close links window when opening the selected link

open-message-link-window.close-after-select = yes

# color parts of a displayed message according to a regular expression
# syntax is regular expression color attribute
# valid color are specified using RGB triplets as #RRGGBB or color names
# valid color names are:
# - red
# - green
# - yellow
# - blue
# - magenta
# - cyan
# - white
#
# valid attributes are:
# - bold
# - italic
# - underline
# - blink

# attribute is optional

# Some examples follows, order matters!

# http links
color-regexp                     = "http(s)?://[^ ]+" #ff0000

# gemini address header

color-regexp                     = "-> gemini://[^ ]+" yellow underline

#gemini links

color-regexp                     = "gemini://[^ ]+" #ff0000

# (c) and (r)

color-regexp                     = "(?i)(\\(c\\))|(\\(r\\))" #ff0000 bold

# date yyyy-mm-dd

color-regexp                     = "[0-9]{4}-[0-9]?[0-9]-[0-9]?[0-9]" #0000ff bold

# numbers

color-regexp                     = "-?[0-9]+(.[0-9]+)?%" #ff00ff bold

# *bold*

color-regexp                     = "\*[^[:space:]*]+\*" #ffff00 bold

# _underline_

color-regexp                     = "_[^[:space:]_]+_" #ffff00 underline

# /italic/ , commented as interferes with file path and URI

#color-regexp                     = "/[^/]+/" #ffff00 italic

# by default polls uses that

color-regexp                     = "‚ØÄ" green bold

color-regexp                     = "The poll has expired" #ff00ff bold

# HH:MM

color-regexp                     = "[012][0-9]:[0123456][0-9]" cyan bold

# your username mentioned

#color-regexp                     = "your-username" #ff00ff bold

# gemini colorization

# header level 1

color-regexp                     = "^üûÇ.*" white bold

# header level 2

color-regexp                     = "üûì .+" blue bold

# header level 3

color-regexp                     = "üûê .+" yellow bold

# header level 4

color-regexp                     = "üûé " yellow

# list bullet

color-regexp                     = "‚Ä¢ " blue bold

# stream statuses

color-regexp                     = ":completed" green bold

color-regexp                     = ":aborted"   red

color-regexp                     = ":rendering" cyan

# the signature file path relative to $HOME

# signature-file                 = ".signature"

# you can filter off users using regexp

# ignore-user-regexp             = "@domain-name$"

# ignore-user-regexp             = "^user-name@domain-name"

# Use gemini favicon?
# see  gemini://mozz.us/files/rfc_gemini_favicon.gmi
# gemini.fetch.favicon           = no

# you can  instruct the program  to open some  non gemini link  with a
# program installed with your system like below
# syntax open "REGEXP" with "PROGRAM-NAME" [use cache]
# example:
#
# open "https?://.+mp3" with "mpv"

# you can open mpv in a new terminal this way:
#
# open "https?://.+mp3" with "xterm -e mpv"
# open "mp3$"  with "xterm -e mpv"
# open "m3u8$" with "xterm -e mpv"
# open "ogg$"  with "xterm -e mpv"

# open png files with gimp but cache them before
#                                  ‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº
# open "https?://png$" with "gimp" use cache

# using "no  wait" allow for content  to be opened before  download is
# completed; note  that not all  file types  can be opened  before the
# whole file is available to the opening program
#                                  ‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº
# open "mp3$"  with "xterm -e mpv" no wait
#

# finally if you  want to open some  kind of file with  tinmop try the
# following: valid values are "tinmop" "me" "internal"
#                                           ‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº‚ñº
open "^((gemini://)|(\\.)|(/)).+gmi$"  with "tinmop"
open "^((gemini://)|(\\.)|(/)).+txt$"  with "tinmop"
open "^((gemini://)|(\\.)|(/)).+sh$"   with "tinmop"
open ".gpub$"                          with "tinmop"
